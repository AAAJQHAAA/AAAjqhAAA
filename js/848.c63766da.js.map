{"version":3,"file":"js/848.c63766da.js","mappings":"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","sources":["webpack://jqh-code/./src/views/Home.vue","webpack://jqh-code/./src/views/home/Fire.js","webpack://jqh-code/src/views/Home.vue","webpack://jqh-code/./src/views/Home.vue?a787","webpack://jqh-code/./src/views/Home.vue?8611"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"home\"},[_c('canvas'),_c('div',{staticClass:\"card\"},[_c('el-card',{staticClass:\"card-item\",attrs:{\"shadow\":\"hover\"},nativeOn:{\"click\":function($event){return _vm.openBk()}}},[_vm._v(\" 博客 \")]),_c('el-card',{staticClass:\"card-item\",attrs:{\"shadow\":\"hover\"},nativeOn:{\"click\":function($event){return _vm.$router.push('/exampleHome')}}},[_vm._v(\" canvas示例 \")]),_c('el-card',{staticClass:\"card-item\",attrs:{\"shadow\":\"hover\"},nativeOn:{\"click\":function($event){return _vm.$router.push('/pannellum')}}},[_vm._v(\" 全景图编辑器 \")])],1)])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","export class FireWork {\r\n    constructor(startX, startY, endX, endY) {\r\n        // 烟花起始点(从哪个地方开始发射)\r\n        this.startX = startX\r\n        this.startY = startY\r\n\r\n        // 当前坐标(烟花移动过程中使用)\r\n        this.x = this.startX\r\n        this.y = this.startY\r\n\r\n        // 烟花结束点(发射到哪个地方)\r\n        this.endX = endX\r\n        this.endY = endY\r\n\r\n        // 目标距离\r\n        this.targetDistance = this._getPointsDistance(\r\n            this.startX,\r\n            this.startY,\r\n            this.endX,\r\n            this.endY\r\n        )\r\n\r\n        // 当前烟花移动的距离\r\n        this.currentDistance = 0\r\n\r\n        // hsla 色调\r\n        this.hue = this._getRandomRange(0, 360)\r\n        // hsla 亮度\r\n        this.lightness = this._getRandomRange(50, 70)\r\n\r\n        // 被发射的角度(根据给定的开始、结束位置计算角度)\r\n        this.angle = Math.atan2(this.endY - this.startY, this.endX - this.startX)\r\n\r\n        // 移动速度\r\n        this.speed = 2\r\n        this.acceleration = 1.05 // 加速度系数\r\n    }\r\n\r\n    draw(ctx) {\r\n        ctx.save()\r\n        this.speed *= this.acceleration\r\n        const moveX = this.x + Math.cos(this.angle) * this.speed\r\n        const moveY = this.y + Math.sin(this.angle) * this.speed\r\n        ctx.strokeStyle = `hsla(${this.hue}, 100%, ${this.lightness}%, 60%)` // 仅亮度会变化\r\n        ctx.lineCap = 'round'\r\n        ctx.lineWidth = 10\r\n        ctx.beginPath()\r\n        ctx.moveTo(this.x, this.y)\r\n        ctx.lineTo(moveX, moveY)\r\n        ctx.stroke()\r\n        ctx.restore()\r\n\r\n        this.currentDistance = this._getPointsDistance(\r\n            this.startX,\r\n            this.startY,\r\n            moveX,\r\n            moveY\r\n        )\r\n\r\n        this.x = moveX\r\n        this.y = moveY\r\n    }\r\n\r\n    // 是否到达目标地点\r\n    isArrived() {\r\n        return this.currentDistance >= this.targetDistance\r\n    }\r\n\r\n    // 获取烟花色调\r\n    getHue() {\r\n        return this.hue\r\n    }\r\n\r\n    // 获取目标位置的坐标\r\n    getTargetCoordinate() {\r\n        return [this.endX, this.endY]\r\n    }\r\n\r\n    _getRandomRange(min, max) {\r\n        return Math.random() * (max - min) + min\r\n    }\r\n\r\n    // 计算直角（笛卡尔）坐标系中两点间距离\r\n    _getPointsDistance(x1, y1, x2, y2) {\r\n        return Math.sqrt(Math.pow(x1 - x2, 2) + Math.pow(y1 - y2, 2))\r\n    }\r\n}\r\n\r\nexport class Particle {\r\n    constructor(x, y, hue) {\r\n        // 初始位置\r\n        this.x = x\r\n        this.y = y\r\n\r\n        // 从烟花那得来的hsla色调\r\n        this.hue = this._getRandomRange(hue - 20, hue + 20)\r\n        //this.hue = hue\r\n        // 随机hsla亮度\r\n        this.lightness = this._getRandomRange(50, 80)\r\n\r\n        // 初始透明度\r\n        this.alpha = 1\r\n        // 随机的透明度衰变系数（透明度减淡）\r\n        this.alphaDecay = this._getRandomRange(0.015, 0.03)\r\n\r\n        // 模拟下坠摩擦力(让粒子减速)\r\n        this.friction = 0.95\r\n        // 模拟重力加速度\r\n        this.gravity = 1\r\n\r\n        // 随机角度\r\n        this.angle = this._getRandomRange(0, 2 * Math.PI)\r\n        // 随机初始速度\r\n        this.speed = this._getRandomRange(1, 10)\r\n    }\r\n\r\n    draw(ctx) {\r\n        ctx.save()\r\n        // 减速\r\n        this.speed *= this.friction\r\n        // 计算新位置\r\n        const moveX = this.x + Math.cos(this.angle) * this.speed\r\n        const moveY = this.y + Math.sin(this.angle) * this.speed + this.gravity\r\n\r\n        ctx.beginPath()\r\n        ctx.moveTo(this.x, this.y)\r\n        ctx.lineTo(moveX, moveY)\r\n\r\n        ctx.strokeStyle = `hsla(${this.hue}, 100%, ${this.lightness}%, ${this.alpha})`\r\n        ctx.lineWidth = 5\r\n        ctx.lineCap = 'round'\r\n        ctx.stroke()\r\n        ctx.restore()\r\n        this.x = moveX\r\n        this.y = moveY\r\n        // 透明度衰减\r\n        this.alpha -= this.alphaDecay\r\n    }\r\n\r\n    _getRandomRange(min, max) {\r\n        return Math.random() * (max - min) + min\r\n    }\r\n\r\n    // 粒子是否已经看不见\r\n    isVanished() {\r\n        return this.alpha < this.alphaDecay\r\n    }\r\n}\r\n","<template>\r\n    <div class=\"home\">\r\n        <canvas></canvas>\r\n        <div class=\"card\">\r\n            <el-card @click.native=\"openBk()\" class=\"card-item\" shadow=\"hover\">\r\n                博客\r\n            </el-card>\r\n            <el-card @click.native=\"$router.push('/exampleHome')\" class=\"card-item\" shadow=\"hover\">\r\n                canvas示例\r\n            </el-card>\r\n            <el-card @click.native=\"$router.push('/pannellum')\" class=\"card-item\" shadow=\"hover\">\r\n                全景图编辑器\r\n            </el-card>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { FireWork, Particle } from './home/Fire.js'\r\nexport default {\r\n    name: \"home\",\r\n    data() {\r\n        return {\r\n            timeTicker: 0,\r\n            // 动画执行80次，发射8个烟花\r\n            timeTotal: 80,\r\n            fireworks: [],\r\n            // 一个烟花有多少个粒子\r\n            particlesCount: 50,\r\n            particles: [],\r\n            ball: {\r\n                x: 100, y: 100,// 起始坐标\r\n                vx: 5, vy: 10,// 加速度\r\n                radius: 25,// 半径\r\n                color: \"white\",// 颜色\r\n            }\r\n        }\r\n    },\r\n    methods: {\r\n        // 烟花\r\n        draw() {\r\n            function getRandomRange(min, max) {\r\n                return Math.random() * (max - min) + min\r\n            }\r\n            let _this = this;\r\n            const canvas = document.querySelector('canvas')\r\n            if (!canvas) {\r\n                return;\r\n            }\r\n            const ctx = canvas.getContext('2d')\r\n            // 透明度控制拖尾效果\r\n            ctx.fillStyle = 'rgba(0,0,0,0.03)'\r\n            ctx.fillRect(0, 0, canvas.width, canvas.height)\r\n\r\n            // 画烟花\r\n            for (let index = 0; index < _this.fireworks.length; index++) {\r\n                const firework = _this.fireworks[index]\r\n                firework.draw(ctx)\r\n                if (firework.isArrived()) {\r\n                    _this.fireworks.splice(index, 1)\r\n                    index--\r\n                    for (let j = 0; j < _this.particlesCount; j++) {\r\n                        _this.particles.push(\r\n                            new Particle(\r\n                                ...firework.getTargetCoordinate(),\r\n                                firework.getHue()\r\n                            )\r\n                        )\r\n                    }\r\n                }\r\n            }\r\n\r\n            // 画粒子\r\n            for (let index = 0; index < _this.particles.length; index++) {\r\n                const particle = _this.particles[index]\r\n                particle.draw(ctx)\r\n                if (particle.isVanished()) {\r\n                    _this.particles.splice(index, 1)\r\n                    index--\r\n                }\r\n            }\r\n\r\n            // 函数循环80次自动发射8支烟花\r\n            if (_this.timeTicker >= _this.timeTotal) {\r\n                for (let index = 0; index < _this.timeTotal / 10; index++) {\r\n                    _this.fireworks.push(\r\n                        // 起始点，结束点\r\n                        new FireWork(\r\n                            getRandomRange(0, canvas.width),\r\n                            getRandomRange(0, canvas.height),\r\n                            getRandomRange(0, canvas.width),\r\n                            getRandomRange(0, canvas.height)\r\n                        )\r\n                    )\r\n                }\r\n                _this.timeTicker = 0\r\n            } else {\r\n                _this.timeTicker++\r\n            }\r\n            this.clock();\r\n            this.drawBall();\r\n            requestAnimationFrame(_this.draw)\r\n        },\r\n        // 时钟\r\n        clock() {\r\n            const canvas = document.querySelector('canvas')\r\n            if (!canvas) {\r\n                return;\r\n            }\r\n            const ctx = canvas.getContext('2d')\r\n            const now = new Date();\r\n            ctx.save();\r\n            // ctx.clearRect(50, 50, 200, 200);\r\n            ctx.translate(canvas.width / 2, canvas.height / 4 - 60);// 平移坐标系\r\n            ctx.scale(0.8, 0.8);// 缩放坐标系\r\n            ctx.rotate(-Math.PI / 2);// 旋转坐标系-90度（x+指向上方）\r\n            ctx.strokeStyle = \"white\";// 线段黑色\r\n            ctx.fillStyle = \"white\";// 填充白色\r\n            ctx.lineWidth = 4;// 线宽\r\n            ctx.lineCap = \"round\";// 线段端点样式\r\n\r\n            // Hour marks（小时线-刻度）\r\n            ctx.save();\r\n            for (let i = 0; i < 12; i++) {\r\n                ctx.beginPath();\r\n                ctx.rotate(Math.PI / 6);// （坐标系）每次旋转30度画小时线（从1画到12）\r\n                ctx.moveTo(100, 0);\r\n                ctx.lineTo(120, 0);\r\n                ctx.stroke();\r\n            }\r\n            ctx.restore();\r\n\r\n            // 刻度数字（x+指向上方）\r\n            ctx.save();\r\n            ctx.font = '10px Arial';\r\n            ctx.fillStyle = 'white';\r\n            ctx.textAlign = 'center';\r\n            ctx.textBaseline = 'middle';\r\n            ctx.rotate(Math.PI / 2); //（坐标系）旋转90度（x+指向右边）\r\n            for (let i = 1; i <= 12; i++) {\r\n                const theta = ((i - 3) * (Math.PI * 2)) / 12;// 四个区域，每个区域三份\r\n                const x = 85 * Math.cos(theta);// cos (θ) = 邻边 / 斜边\r\n                const y = 85 * Math.sin(theta);// sin (θ) = 对边 / 斜边\r\n                ctx.fillText(i, x, y);\r\n            }\r\n            ctx.restore();\r\n\r\n            // Minute marks（分钟线-刻度）（x+指向上方）\r\n            ctx.save();\r\n            ctx.lineWidth = 3;\r\n            for (let i = 0; i < 60; i++) {\r\n                if (i % 5 !== 0) {\r\n                    ctx.beginPath();\r\n                    ctx.moveTo(117, 0);\r\n                    ctx.lineTo(120, 0);\r\n                    ctx.stroke();\r\n                }\r\n                ctx.rotate(Math.PI / 30);// （坐标系）每次旋转6度画分钟线（从1画到60）\r\n            }\r\n            ctx.restore();\r\n\r\n            // const sec = now.getSeconds();// 视觉上：一秒跳一次\r\n            // 显示秒针扫过的时钟, 使用:\r\n            const sec = now.getSeconds() + now.getMilliseconds() / 1000;// 视觉上一直在旋转\r\n            const min = now.getMinutes();// 分钟\r\n            const hr = now.getHours() % 12;// 小时\r\n\r\n            ctx.fillStyle = \"black\";\r\n            // Write Hours（时针）\r\n            ctx.save();\r\n            ctx.rotate((Math.PI / 6) * hr + (Math.PI / 360) * min + (Math.PI / 21600) * sec);\r\n            ctx.lineWidth = 8;\r\n            ctx.beginPath();\r\n            ctx.moveTo(-20, 0);\r\n            ctx.lineTo(80, 0);\r\n            ctx.stroke();\r\n            ctx.restore();\r\n\r\n            // Write Minutes（分针）\r\n            ctx.save();\r\n            ctx.rotate((Math.PI / 30) * min + (Math.PI / 1800) * sec);\r\n            ctx.lineWidth = 6;\r\n            ctx.beginPath();\r\n            ctx.moveTo(-28, 0);\r\n            ctx.lineTo(112, 0);\r\n            ctx.stroke();\r\n            ctx.restore();\r\n\r\n            // Write seconds（秒针）\r\n            ctx.save();\r\n            ctx.rotate((sec * Math.PI) / 30);\r\n            ctx.strokeStyle = \"#D40000\";\r\n            ctx.fillStyle = \"#D40000\";\r\n            ctx.lineWidth = 4;\r\n            ctx.beginPath();\r\n            ctx.moveTo(-30, 0);\r\n            ctx.lineTo(83, 0);\r\n            ctx.stroke();\r\n            ctx.moveTo(94, 0);\r\n            ctx.lineTo(99, 0);\r\n            ctx.stroke();\r\n            ctx.beginPath();\r\n            ctx.arc(0, 0, 8, 0, Math.PI * 2, true);\r\n            ctx.fill();\r\n            ctx.beginPath();\r\n            ctx.arc(90, 0, 4, 0, Math.PI * 2, true);\r\n            ctx.stroke();\r\n            ctx.beginPath();\r\n            ctx.fillStyle = \"rgb(0 0 0)\";\r\n            ctx.arc(0, 0, 3, 0, Math.PI * 2, true);// 空心白色\r\n            ctx.fill();\r\n            ctx.restore();\r\n\r\n            ctx.beginPath();\r\n            ctx.lineWidth = 14;\r\n            ctx.strokeStyle = \"white\";\r\n            ctx.arc(0, 0, 142, 0, Math.PI * 2, true);\r\n            ctx.stroke();\r\n\r\n            ctx.restore();\r\n        },\r\n        drawBall() {\r\n            const canvas = document.querySelector('canvas')\r\n            if (!canvas) {\r\n                return;\r\n            }\r\n            const ctx = canvas.getContext('2d')\r\n            const ball = this.ball;\r\n            ctx.beginPath();\r\n            ctx.arc(ball.x, ball.y, ball.radius, 0, Math.PI * 2, true);\r\n            ctx.closePath();\r\n            ctx.fillStyle = ball.color;\r\n            ctx.fill();\r\n            ball.x += ball.vx;// 加\r\n            ball.y += ball.vy;// 加\r\n            // 加速度衰减\r\n            // ball.vy *= 0.99;\r\n            // ball.vy += 0.25;\r\n\r\n            // 边界反弹\r\n            if (ball.y + ball.vy > canvas.height - ball.radius || ball.y + ball.vy < ball.radius) {\r\n                // y轴：球的位置+速度>边界-半径（速度为+），球的位置+速度<半径（速度为-）\r\n                ball.vy = -ball.vy;\r\n            }\r\n            if (ball.x + ball.vx > canvas.width - ball.radius || ball.x + ball.vx < ball.radius) {\r\n                // x轴：球的位置+速度>边界-半径（速度为+），球的位置+速度<半径（速度为-）\r\n                ball.vx = -ball.vx;\r\n            }\r\n        },\r\n        openBk(){\r\n            window.open('/bk.html')\r\n        }\r\n    },\r\n    mounted() {\r\n        const canvas = document.querySelector('canvas')\r\n        //canvas充满窗口\r\n        canvas.width = window.innerWidth;\r\n        canvas.height = window.innerHeight;\r\n        this.draw();\r\n        window.addEventListener('resize', () => {\r\n            //canvas充满窗口\r\n            canvas.width = window.innerWidth;\r\n            canvas.height = window.innerHeight;\r\n        }, false);\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\ncanvas {\r\n    position: absolute;\r\n    top: 0;\r\n    z-index: -1;\r\n}\r\n\r\n.home {\r\n    width: 100%;\r\n    height: 100%;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n\r\n    .card {\r\n        width: 300px;\r\n        background-color: #ffffff;\r\n        padding: 10px;\r\n        border-radius: 10px;\r\n\r\n        .card-item {\r\n            user-select: none;\r\n\r\n            &:not(:first-of-type) {\r\n                margin-top: 10px;\r\n            }\r\n        }\r\n    }\r\n}\r\n</style>\r\n","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Home.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Home.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./Home.vue?vue&type=template&id=76626bc2&scoped=true\"\nimport script from \"./Home.vue?vue&type=script&lang=js\"\nexport * from \"./Home.vue?vue&type=script&lang=js\"\nimport style0 from \"./Home.vue?vue&type=style&index=0&id=76626bc2&prod&scoped=true&lang=scss\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"76626bc2\",\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_c","_self","staticClass","attrs","nativeOn","$event","openBk","_v","$router","push","staticRenderFns","FireWork","constructor","startX","startY","endX","endY","x","y","targetDistance","_getPointsDistance","currentDistance","hue","_getRandomRange","lightness","angle","Math","atan2","speed","acceleration","draw","ctx","save","moveX","cos","moveY","sin","strokeStyle","lineCap","lineWidth","beginPath","moveTo","lineTo","stroke","restore","isArrived","getHue","getTargetCoordinate","min","max","random","x1","y1","x2","y2","sqrt","pow","Particle","alpha","alphaDecay","friction","gravity","PI","isVanished","name","data","timeTicker","timeTotal","fireworks","particlesCount","particles","ball","vx","vy","radius","color","methods","getRandomRange","_this","canvas","document","querySelector","getContext","fillStyle","fillRect","width","height","index","length","firework","splice","j","particle","clock","drawBall","requestAnimationFrame","now","Date","translate","scale","rotate","i","font","textAlign","textBaseline","theta","fillText","sec","getSeconds","getMilliseconds","getMinutes","hr","getHours","arc","fill","closePath","window","open","mounted","innerWidth","innerHeight","addEventListener","component"],"sourceRoot":""}