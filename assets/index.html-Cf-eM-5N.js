import{_ as i,c as e,a,o as s}from"./app-CiQOVv9k.js";const o={};function t(r,l){return s(),e("div",null,l[0]||(l[0]=[a('<ul><li>中文网站：https://nodejs.cn/</li><li>官网：https://nodejs.org/</li><li>Node.js 是单线程的。它基于事件驱动的架构，使用了非阻塞I/O 操作，通过事件循环机制实现异步操作，这使得 Node.js 可以高效地处理大量的并发请求。</li><li>虽然 Node.js 本身是单线程的，但是它可以利用事件驱动、回调函数、Promise、async/await 等方式来实现并发处理，从而高效地利用计算资源。</li></ul><h1 id="事件驱动架构" tabindex="-1"><a class="header-anchor" href="#事件驱动架构"><span>事件驱动架构</span></a></h1><ul><li>事件驱动架构是一种软件设计范例，它基于事件和事件处理程序的概念。</li><li>在事件驱动架构中，软件系统的行为在很大程度上是由外部事件的发生和处理所驱动的。 <ul><li>当一个事件发生时，系统会调用相应的事件处理程序来进行处理。</li></ul></li><li>在事件驱动架构中，通常会有一个事件循环来监听事件的发生，当事件发生时，会触发对应的事件处理程序。 <ul><li>这种模型通常用于实现异步、非阻塞的系统，允许系统同时处理多个事件而不需要等待每个事件处理完毕。</li></ul></li><li>在软件开发中，事件驱动架构通常被用于构建高性能、高并发的系统，比如 Web 服务器、消息队列等。 <ul><li>Node.js 就是一个典型的事件驱动架构的例子，它使用事件循环来处理异步 I/O 操作和事件驱动的回调函数。</li></ul></li></ul><h1 id="promise-和-async-await" tabindex="-1"><a class="header-anchor" href="#promise-和-async-await"><span>Promise 和 async/await</span></a></h1><ul><li>JavaScript 中用于处理异步操作的两种机制 <ul><li>Promise：用来处理异步操作的内置对象</li><li>async/await：用于简化异步操作的语法糖 <ul><li>async 关键字：用于声明一个异步函数，该函数将返回一个 Promise 对象，</li><li>await 关键字：可以等待一个 Promise 对象的解决，并返回其结果</li></ul></li></ul></li></ul><h1 id="概念" tabindex="-1"><a class="header-anchor" href="#概念"><span>概念</span></a></h1><ul><li>非阻塞IO，IO密集，事件驱动</li><li>进程：一个运行的程序</li><li>线程：进程内一个独立可调度的执行单元</li><li>nodejs工作模型 <ul><li>事件驱动主进程是单线程模型</li><li>IO是操作系统底层多线程调度</li><li>注意：单线程并不是单进程</li></ul></li></ul><h1 id="global全局对象" tabindex="-1"><a class="header-anchor" href="#global全局对象"><span>global全局对象</span></a></h1><ul><li><p>CommonJS：module.exports、exports</p></li><li><p>Buffer</p></li><li><p>console</p></li><li><p>process</p></li><li><p>timer</p></li><li><p>process.nextTick(()=&gt;{})：当前事件队列尾</p></li><li><p>setTimeout(()=&gt;{},0)</p></li><li><p>setImmediate(()=&gt;{})：下一个事件队列首</p></li></ul><h1 id="调试" tabindex="-1"><a class="header-anchor" href="#调试"><span>调试</span></a></h1><ul><li>Inspector <ul><li>1、（无用）debugger<a href="https://nodejs.cn/api/debugger.html" target="_blank" rel="noopener noreferrer">官网调试器</a></li><li>2、<code>node --inspect-brk myscript.js</code><ul><li>浏览器打开：<code>chrome://inspect</code></li><li>打断点、下一个断点、进入、跳过</li></ul></li></ul></li><li>vscode <ul><li>打断点、调试</li></ul></li></ul><h1 id="基础" tabindex="-1"><a class="header-anchor" href="#基础"><span>基础</span></a></h1><ul><li><code>__dirname</code>、<code>__filename</code>返回文件绝对路径</li><li><code>process.cwd()</code>返回node命令启动路径</li><li><code>./</code> 当前文件所在文件夹</li><li>Buffer <ul><li>处理二进制数据流</li><li>大小固定</li><li>内存是v8堆外c++内存</li></ul></li><li>Events：事件处理</li><li>fs：文件操作</li></ul>',13)]))}const d=i(o,[["render",t],["__file","index.html.vue"]]),c=JSON.parse('{"path":"/article/3tnoaul1/","title":"Node","lang":"zh-CN","frontmatter":{"title":"Node","createTime":"2023/12/13 16:25:41","tags":["node"],"permalink":"/article/3tnoaul1/"},"headers":[],"readingTime":{"minutes":2.36,"words":708},"git":{"updatedTime":1737255104000,"contributors":[{"name":"jqh","username":"jqh","email":"1789622669@qq.com","commits":2,"avatar":"https://gravatar.com/avatar/e51d6bd9179d8251507631920dbee86805db2675024268e3d9894ba170e9c314?d=retro"}]},"filePathRelative":"2024/前端/node/Node.md","categoryList":[{"id":"07811d","sort":10001,"name":"2024"},{"id":"d1a041","sort":10007,"name":"前端"},{"id":"9e26c9","sort":10011,"name":"node"}],"bulletin":false}');export{d as comp,c as data};
