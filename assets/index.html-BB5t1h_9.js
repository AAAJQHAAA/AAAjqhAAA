import{_ as i,c as a,a as n,o as e}from"./app-CiQOVv9k.js";const l={};function t(p,s){return e(),a("div",null,s[0]||(s[0]=[n(`<ul><li>在本教程中，我们将介绍声音的创建和修改，以及时间和调度。我们将介绍样品加载、包络、滤波器、波表和频率调制。如果您熟悉这些术语，并且正在寻找Web Audio API应用程序的介绍，那么您来对地方了。</li><li>注：你可以在GitHub上MDN的<a href="https://github.com/mdn/webaudio-examples" target="_blank" rel="noopener noreferrer">webaudio-examples</a> repo的step-sequencer目录中找到下面演示的源代码。您还可以看到<a href="https://mdn.github.io/webaudio-examples/step-sequencer/" target="_blank" rel="noopener noreferrer">现场演示</a></li></ul><h1 id="演示" tabindex="-1"><a class="header-anchor" href="#演示"><span>演示</span></a></h1><ul><li>实际上，使用库更容易做到这一点--Web Audio API就是为了构建而构建的。如果你打算开始构建更复杂的东西，<a href="https://tonejs.github.io/" target="_blank" rel="noopener noreferrer">tone.js</a>将是一个很好的起点。但是，我们想演示如何从基本原理创建这样的演示作为学习练习</li><li>该界面由主控件组成，允许我们播放/停止音序器，并调整BPM（每分钟节拍）以加快或减慢“音乐”</li><li>可以播放四种不同的声音或声音。每个声音有四个按钮，一个按钮对应一小节音乐中的每个节拍。当它们被启用时，音符将发出声音。当乐器演奏时，它会穿过这组节拍并在小节上循环</li><li>每个声音也有本地控制，允许您操纵特定于我们用于创建这些声音的每种技术的效果或参数。我们使用的方法是： <ul><li>&quot;Sweep&quot; 振荡器，周期波</li><li>&quot;Pulse&quot; 多个振荡器</li><li>&quot;Noise&quot; 随机噪声缓冲器，双二阶滤波器</li><li>&quot;Dial up&quot; 正在加载要播放的声音样本</li></ul></li><li>注意：我们创建这个乐器并不是为了听起来好，而是为了提供演示代码。这个演示是这种仪器的一个非常简化的版本。声音是基于拨号调制解调器。如果你不知道这样的设备听起来如何，你可以<a href="https://soundcloud.com/john-pemberton/modem-dialup" target="_blank" rel="noopener noreferrer">在这里听一个</a>。</li></ul><h1 id="创建音频上下文" tabindex="-1"><a class="header-anchor" href="#创建音频上下文"><span>创建音频上下文</span></a></h1><ul><li><code>const audioCtx = new AudioContext();</code></li></ul><h1 id="扫描-振荡器、周期波和包络" tabindex="-1"><a class="header-anchor" href="#扫描-振荡器、周期波和包络"><span>“扫描”-振荡器、周期波和包络</span></a></h1><ul><li>对于我们称之为“扫频”的声音，当你拨号时听到的第一个噪音，我们将创建一个振荡器来产生声音。</li><li>OscillatorNode具有开箱即用的基本波形-正弦、方波、三角波或正弦波。然而，我们将使用PeriodicWave接口和wavetable中的值来创建自己的wave，而不是使用默认的标准wave。我们可以使用PeriodicWave()构造函数将这个自定义wave与振荡器一起使用</li></ul><h2 id="周期波" tabindex="-1"><a class="header-anchor" href="#周期波"><span>周期波</span></a></h2><ul><li>首先，我们将创建周期波。为此，我们需要将真实的值和虚值传入PeriodicWave()构造函数</li></ul><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>const wave = new PeriodicWave(audioCtx, {</span></span>
<span class="line"><span>  real: wavetable.real,</span></span>
<span class="line"><span>  imag: wavetable.imag,</span></span>
<span class="line"><span>});</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>注意：在我们的例子中，波表保存在一个单独的JavaScript文件（wavetable.js）中，因为有很多值。我们从一个<a href="https://github.com/GoogleChromeLabs/web-audio-samples/tree/main/src/demos/wavetable-synth/wave-tables" target="_blank" rel="noopener noreferrer">wavetables存储库</a>中获取它，该存储库位于<a href="https://github.com/GoogleChromeLabs/web-audio-samples/" target="_blank" rel="noopener noreferrer">Google Chrome Labs的Web Audio API示例</a>中。</li></ul><h2 id="振荡器" tabindex="-1"><a class="header-anchor" href="#振荡器"><span>振荡器</span></a></h2><ul><li>现在我们可以创建一个OscillatorNode并将其wave设置为我们创建的wave</li></ul><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>function playSweep(time) {</span></span>
<span class="line"><span>  const osc = new OscillatorNode(audioCtx, {</span></span>
<span class="line"><span>    frequency: 380,</span></span>
<span class="line"><span>    type: &quot;custom&quot;,</span></span>
<span class="line"><span>    periodicWave: wave,</span></span>
<span class="line"><span>  });</span></span>
<span class="line"><span>  osc.connect(audioCtx.destination);</span></span>
<span class="line"><span>  osc.start(time);</span></span>
<span class="line"><span>  osc.stop(time + 1);</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>我们在这里向函数传递一个时间参数，稍后我们将使用它来调度扫描</li></ul><h2 id="控制振幅" tabindex="-1"><a class="header-anchor" href="#控制振幅"><span>控制振幅</span></a></h2><ul><li>这很好，但如果我们有一个振幅包络来配合它，不是更好吗？让我们来创建一个简单的信封，以便熟悉使用Web Audio API创建信封所需的方法</li><li>假设我们的信封有攻击和释放。我们可以允许用户使用界面上的范围输入来控制这些</li></ul><div class="language-html line-numbers-mode" data-ext="html" data-title="html"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">label</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> for</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">attack</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">Attack</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;/</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">label</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">input</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">  name</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">attack</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">  id</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">attack</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">  type</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">range</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">  min</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">0</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">  max</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">1</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">  value</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">0.2</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">  step</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">0.1</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> /&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">label</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> for</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">release</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">Release</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;/</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">label</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">input</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">  name</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">release</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">  id</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">release</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">  type</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">range</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">  min</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">0</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">  max</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">1</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">  value</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">0.5</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">  step</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">0.1</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> /&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>现在我们可以在JavaScript中创建一些变量，并在输入值更新时更改它们：</li></ul><div class="language-html line-numbers-mode" data-ext="html" data-title="html"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">let attackTime = 0.2;</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">const attackControl = document.querySelector(&quot;#attack&quot;);</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">attackControl.addEventListener(</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  &quot;input&quot;,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  (ev) =&gt; {</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    attackTime = parseInt(ev.target.value, 10);</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  },</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  false,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">let releaseTime = 0.5;</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">const releaseControl = document.querySelector(&quot;#release&quot;);</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">releaseControl.addEventListener(</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  &quot;input&quot;,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  (ev) =&gt; {</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    releaseTime = parseInt(ev.target.value, 10);</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  },</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  false,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,20)]))}const k=i(l,[["render",t],["__file","index.html.vue"]]),d=JSON.parse('{"path":"/article/ecyktdk6/","title":"005高级","lang":"zh-CN","frontmatter":{"title":"005高级","createTime":"2024/03/11 19:18:36","permalink":"/article/ecyktdk6/"},"headers":[],"readingTime":{"minutes":3.49,"words":1048},"git":{"updatedTime":1737255104000,"contributors":[{"name":"jqh","username":"jqh","email":"1789622669@qq.com","commits":2,"avatar":"https://gravatar.com/avatar/e51d6bd9179d8251507631920dbee86805db2675024268e3d9894ba170e9c314?d=retro"}]},"filePathRelative":"2024/前端/webMedia/WebAudioAPI/005高级.md","categoryList":[{"id":"07811d","sort":10001,"name":"2024"},{"id":"d1a041","sort":10007,"name":"前端"},{"id":"e77e4c","sort":10013,"name":"webMedia"},{"id":"21949c","sort":10023,"name":"WebAudioAPI"}],"bulletin":false}');export{k as comp,d as data};
