import{_ as l,c as a,a as e,o as s}from"./app-CiQOVv9k.js";const n={};function t(d,i){return s(),a("div",null,i[0]||(i[0]=[e(`<ul><li>https://developer.mozilla.org/en-US/docs/Web/Media</li></ul><h3 id="html中的标签" tabindex="-1"><a class="header-anchor" href="#html中的标签"><span>HTML中的标签</span></a></h3><ul><li><code>audio</code>==<code>HTMLAudioElement</code>(音频)</li><li><code>video</code>==<code>HTMLVideoElement</code>(视频)</li><li><code>track</code>==<code>HTMLTrackElement</code>(字幕)</li><li><code>source</code>==<code>HTMLSourceElement</code>(媒体源)</li></ul><h3 id="media-capabilities-api-编解码" tabindex="-1"><a class="header-anchor" href="#media-capabilities-api-编解码"><span>Media Capabilities API（编解码）</span></a></h3><ul><li>确定应用或网站运行设备的编码和解码功能</li><li>实时决定使用何种格式以及何时使用</li></ul><h3 id="media-capture-and-streams-api" tabindex="-1"><a class="header-anchor" href="#media-capture-and-streams-api"><span>Media Capture and Streams API</span></a></h3><ul><li>网络流式传输、录制和操作媒体</li><li>使用本地摄像头和麦克风捕获视频、音频和静态图像</li></ul><h3 id="media-session-api" tabindex="-1"><a class="header-anchor" href="#media-session-api"><span>Media Session API</span></a></h3><ul><li>提供了一种自定义媒体通知的方法。为Web应用正在播放的媒体提供元数据，以供用户代理显示</li><li>提供操作处理程序，浏览器可使用这些操作处理程序访问平台媒体键，例如键盘、耳机、遥控器上的硬件键，以及通知区域和移动的设备的锁屏上的软件键</li></ul><h3 id="mediastream-recording-api" tabindex="-1"><a class="header-anchor" href="#mediastream-recording-api"><span>MediaStream Recording API</span></a></h3><ul><li>捕获媒体流以处理或过滤数据或将其记录到磁盘</li></ul><h3 id="web-audio-api" tabindex="-1"><a class="header-anchor" href="#web-audio-api"><span>Web Audio API</span></a></h3><ul><li>实时生成、过滤和处理预先录制的文件上的声音数据，然后将该音频发送到目标，如audio元素、媒体流或磁盘</li></ul><h3 id="webrtc" tabindex="-1"><a class="header-anchor" href="#webrtc"><span>WebRTC</span></a></h3><ul><li>（Web实时通信）在互联网上的两个对等点之间，流传输实时音频和视频以及传输任意数据，且不需要中介</li></ul><h1 id="音视频基础概念" tabindex="-1"><a class="header-anchor" href="#音视频基础概念"><span>音视频基础概念</span></a></h1><ul><li><p>帧Frame：视频中每一张画面</p></li><li><p>帧数Frames：画面数量</p></li><li><p>帧率Frame rate：每秒显示帧数=帧数/时间</p></li><li><p>FPS（同上）：每秒传输的帧数</p></li><li><p>时钟频率为90000，一秒90000点</p><ul><li>帧率为25，那么一帧就是1/25秒</li><li>一帧有90000*(1/25)=3600个点来表示</li></ul></li><li><p>音频采样率：8000Hz</p><ul><li>每采样一次：1/8000s</li><li>如果20ms=0.02s封包一次，所以时间戳增量0.02/(1/8000)=160</li></ul></li><li><p>视频采样率：90000Hz</p><ul><li>每采样一次：1/90000s</li><li>如果帧率是25帧/s，一帧1/25s，所以时间戳增量(1/25)/(1/90000)=3600</li></ul></li></ul><h2 id="分辨率" tabindex="-1"><a class="header-anchor" href="#分辨率"><span>分辨率</span></a></h2><ul><li>由于屏幕上的点、线和面都是由像素组成的，显示器可显示的像素越多，画面就越精细，同样的屏幕区域内能显示的信息也越多，所以分辨率是个非常重要的性能指标之一。</li><li>可以把整个图像想象成是一个大型的棋盘，而分辨率的表示方式就是所有经线和纬线交叉点的数目。</li><li>显示分辨率一定的情况下，显示屏越小图像越清晰，反之，显示屏大小固定时，显示分辨率越高图像越清晰。</li><li>显示分辨率（屏幕分辨率）：屏幕图像的精密度，指显示器所能显示的像素有多少</li><li>图像分辨率：单位英寸中所包含的像素点数</li></ul><h2 id="帧率" tabindex="-1"><a class="header-anchor" href="#帧率"><span>帧率</span></a></h2><ul><li>帧率也称为FPS(Frames PerSecond)的缩写【帧/秒】。</li><li>是指每秒钟刷新的图片的帧数，也可以理解为图形处理器每秒钟能够刷新几次。</li><li>越高的帧速率可以得到更流畅、更逼真的动画。</li><li>每秒钟帧数(FPS)越多，所显示的动作就会越流畅。</li><li>比如我们常见的听人说30帧，25帧，其实就是一秒刷新30或者25帧图片，一般帧率为25，人眼就已经很难察觉图像是不连续的或者影响观看效果了。</li><li>影响FPS值的主要因素就是显卡，一款好的独立显卡会对FPS的提升有着很大的作用。</li><li>如果FPS值过低可以尝试通过调节一些游戏或者电脑参数来缓解如：降低游戏分辨率、开启垂直同步等等。</li></ul><h2 id="码流" tabindex="-1"><a class="header-anchor" href="#码流"><span>码流</span></a></h2><ul><li>码流(Data Rate)是指视频文件在单位时间内使用的数据流量，也叫码率或码流率，</li><li>通俗一点的理解就是取样率,是视频编码中画面质量控制中最重要的部分，一般我们用的单位是kb/s或者Mb/s。(byte)</li><li>一般来说同样分辨率下，视频文件的码流越大，压缩比就越小，画面质量就越高。</li><li>码流越大，说明单位时间内取样率越大，数据流，精度就越高，处理出来的文件就越接近原始文件，图像质量越好，画质越清晰，要求播放设备的解码能力也越高。</li><li>如何根据图片分辨率算码流大小？</li><li>例如：我们以1920x1080分辨率计算，图片格式为YUV420，帧率为30FPS，</li><li>那么码流大小为：1920<em>1080</em>(3/2)<em>8</em>30/(1024*1024) = 89 Mb/s，</li><li>至于为什么乘以3/2那就和YUV420格式存储有关系了,乘8即将Byte转为bit，如果图片格式为RGB24即一帧图片大小为分辨率x3，如果是RGB32即一帧图片大小为分辨率x4。</li></ul><h2 id="采样位深" tabindex="-1"><a class="header-anchor" href="#采样位深"><span>采样位深</span></a></h2><ul><li>我们常见的16Bit（16比特），可以记录大概96分贝的动态范围。</li><li>那么，您可以大概知道，每一个比特大约可以记录6分贝的声音。</li><li>同理，20Bit可记录的动态范围大概就是120dB；24Bit就大概是144dB。</li><li>假如，我们定义0dB为峰值，那么声音振幅以向下延伸计算，那么，CD音频可的动态范围就是“-96dB～0dB。”</li><li>依次类推，24Bit的HD-Audio高清音频的的动态范围就是“-144dB~0dB。”。</li><li>由此可见，位深度较高时，有更大的动态范围可利用，可以记录更低电平的细节。</li></ul><h2 id="采样率" tabindex="-1"><a class="header-anchor" href="#采样率"><span>采样率</span></a></h2><ul><li>采样率（也称为采样速度或者采样频率）定义了每秒从连续信号中提取并组成离散信号的采样个数，它用赫兹（Hz）来表示。（个/秒）</li><li>采样率是指将模拟信号转换成数字信号时的采样频率，也就是单位时间内采样多少点。一个采样点数据有多少个比特。</li><li>我们人耳能听到的声音一般在20Hz~20KHz之间，根据奈奎斯特采样定理，采样频率fs大于信号中最高频率fmax的2倍时，采样之后的数字信号便能完整的反应真实信号。</li><li>所以44.1KHz为常见的采样率。</li><li>人的发音器官发出的声音频率大约是80<sub>3400Hz，但人说话的信号平率通常为300</sub>3000Hz，人们把这种频率范围的信号称为话音（speech）信号。</li><li>采样率类似于动态影像的帧数，比如电影的采样率是24赫兹，PAL制式的采样率是25赫兹，NTSC制式的采样率是30赫兹。</li><li>当我们把采样到的一个个静止画面再以采样率同样的速度回放时，看到的就是连续的画面。</li><li>同样的道理，把以44.1kHZ采样率记录的CD以同样的速率播放时，就能听到连续的声音。</li><li>显然，这个采样率越高，听到的声音和看到的图像就越连贯。</li><li>当然，人的听觉和视觉器官能分辨的采样率是有限的，基本上高于44.1kHZ采样的声音，绝大部分人已经觉察不到其中的分别了。</li><li>而声音的位数就相当于画面的颜色数，表示每个取样的数据量，当然数据量越大，回放的声音越准确，不至于把开水壶的叫声和火车的鸣笛混淆。</li><li>同样的道理，对于画面来说就是更清晰和准确，不至于把血和西红柿酱混淆。不过受人的器官的机能限制，16位的声音和24位的画面基本已经是普通人类的极限了，更高位数就只能靠仪器才能分辨出来了。</li><li>比如电话就是3kHZ取样的7位声音，而CD是44.1kHZ取样的16位声音，所以CD就比电话更清楚。</li><li>常见的采样率为： <ul><li>8,000 Hz - 电话所用采样率, 对于人的说话已经足够</li><li>11,025 Hz</li><li>22,050 Hz - 无线电广播所用采样率</li><li>32,000 Hz - miniDV 数码视频 camcorder、DAT (LP mode)所用采样率</li><li>44,100 Hz - 音频 CD, 也常用于 MPEG-1 音频（VCD, SVCD, MP3）所用采样率</li><li>47,250 Hz - Nippon Columbia (Denon)开发的世界上第一个商用 PCM 录音机所用采样率</li><li>48,000 Hz - miniDV、数字电视、DVD、DAT、电影和专业音频所用的数字声音所用采样率</li><li>50,000 Hz - 二十世纪七十年代后期出现的 3M 和 Soundstream 开发的第一款商用数字录音机所用采样率</li><li>50,400 Hz - 三菱 X-80 数字录音机所用所用采样率</li><li>96,000 或者 192,000 Hz - DVD-Audio、一些 LPCM DVD 音轨、Blu-ray Disc（蓝光盘）音轨、和 HD-DVD （高清晰度 DVD）音轨所用所用采样率</li><li>2.8224 MHz - SACD、 索尼 和 飞利浦 联合开发的称为 Direct Stream Digital 的 1 位 sigma-delta modulation 过程所用采样率。</li></ul></li></ul><h2 id="比特率" tabindex="-1"><a class="header-anchor" href="#比特率"><span>比特率</span></a></h2><ul><li>比特率是指每秒传送的比特(bit)数。</li><li>单位为 bps(Bit Per Second)，比特率越高，传送的数据越大，音质越好.比特率 =采样率 x 采用位数 x声道数.</li><li>关于比特率(比特率在音频或者视频领域也称为码率)的计算， <ul><li>比如，采样率为44.1KHz，以16bit采样，声道数为2，那么它的音频比特率的计算为：44100<em>16</em>2 = 1411200 bps = 1378 kbps，(bit)</li><li>然后我们在除以8，将bit转化为Byte，所以1秒钟的数据量就是：1411200/8 = 176400 个字节(B)。</li></ul></li></ul><h2 id="byte-bit" tabindex="-1"><a class="header-anchor" href="#byte-bit"><span>byte,bit</span></a></h2><ul><li>一个bit是一个0或1叫做一个二进制位。</li><li>一个byte由8bits组成，是数据存储的基础单位，</li><li>1byte又称为一个字节，用一个字节Byte储存，可区别256个数字。 <ul><li>1byte=8bit</li><li>1kb=1024bytes</li><li>1Mb=1024kb=1024*1024bytes</li><li>1Gb</li><li>1Tb</li><li>1pb</li><li>1eb</li></ul></li></ul><h1 id="pcm" tabindex="-1"><a class="header-anchor" href="#pcm"><span>PCM</span></a></h1><ul><li>脉冲编码调制。是一种模拟信号的数字化方法。</li><li>PCM 不是一种格式。</li><li>他只是一种方法，利用这种方法存储起来的音频，最常见的就是 WAV 格式。</li><li>声音由振动产生，同样地，反向通过传感器可以将这种振动转换为模拟信号。</li><li>而模拟信号按照一定的频率保存下来的离散数据就是无损的音频数据。</li><li>PCM 方法保存的音频的质量，同时也是体积，由三个因素所决定： <ul><li>采样率：SampleRate</li><li>位深：Bit Depth</li><li>声道数：Channel</li></ul></li></ul><h1 id="采样率-samplerate-hz-次-秒" tabindex="-1"><a class="header-anchor" href="#采样率-samplerate-hz-次-秒"><span>采样率 SampleRate（hz）（次/秒）</span></a></h1><ul><li>采样率故名思议就是采集声音样本的频率。</li><li>声音的采集过程和录像类似。</li><li>只不过录像采集光，而录音采集振动。</li><li>想象一下，你用相机拍照高速连拍，每秒拍 24 次，合并起来就可以得到一段 24 FPS 的影像。</li><li>但在 24 帧之外的图像，都被丢失了。</li><li>录音的采样也是同理。一段 3s 的声音，如果每秒采集一次，则为 1HZ 采样率。</li><li>最终你可以得到 3 个点的音频数据。这当然是远远不够的，这个数据丢失太多了。我们需要的是更接近真实的声音。</li><li>PCM 数据采样率最常见的就是 44100 hz。</li><li>这种采样率也是 Google 所推荐的在 Android 平台兼容性最佳的参数值。 他表示每秒采集 44100 次数据。</li><li>想象一下，在 3s 时间内，连续采集 44100 x 3 次，是何等的快速。</li></ul><h1 id="位深" tabindex="-1"><a class="header-anchor" href="#位深"><span>位深</span></a></h1><ul><li>每个采样点存储的位数bit</li></ul><h1 id="声道" tabindex="-1"><a class="header-anchor" href="#声道"><span>声道</span></a></h1><ul><li>声音的频道数是针对输出而言的。</li><li>几个声道就表示支持几个输出。</li><li>一般而言的（联合）立体声：Joint Stereo，就是指左右两条声道，两条声道声音数据一致，每一帧数据左右声道都连在一起：</li></ul><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>// 单声道数据</span></span>
<span class="line"><span>A B C D E</span></span>
<span class="line"><span>// Joint Stereo</span></span>
<span class="line"><span>AABBCCDDEE</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>这自然导致了音频大小成倍上升：双声道数据大小是单声道的两倍。</li></ul><h1 id="pcm体积" tabindex="-1"><a class="header-anchor" href="#pcm体积"><span>PCM体积</span></a></h1><ul><li>SampleRate×bitDepth×channelCounts</li></ul><h1 id="比特率-bitrate" tabindex="-1"><a class="header-anchor" href="#比特率-bitrate"><span>比特率：Bitrate</span></a></h1><ul><li>100MBps，指的是理论下每秒传输 100MByte 的数据。</li><li>100Mbps,bit</li></ul>`,45)]))}const h=l(n,[["render",t],["__file","index.html.vue"]]),c=JSON.parse('{"path":"/article/6rc8q7ps/","title":"Web媒体技术","lang":"zh-CN","frontmatter":{"title":"Web媒体技术","tags":["Web Media"],"createTime":"2024/03/01 15:46:45","permalink":"/article/6rc8q7ps/"},"headers":[],"readingTime":{"minutes":10.09,"words":3027},"git":{"updatedTime":1737255104000,"contributors":[{"name":"jqh","username":"jqh","email":"1789622669@qq.com","commits":2,"avatar":"https://gravatar.com/avatar/e51d6bd9179d8251507631920dbee86805db2675024268e3d9894ba170e9c314?d=retro"}]},"filePathRelative":"2024/前端/webMedia/webMedia.md","categoryList":[{"id":"07811d","sort":10001,"name":"2024"},{"id":"d1a041","sort":10007,"name":"前端"},{"id":"e77e4c","sort":10013,"name":"webMedia"}],"bulletin":false}');export{h as comp,c as data};
